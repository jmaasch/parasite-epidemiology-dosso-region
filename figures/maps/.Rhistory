annotate("point", x = 2.9772676, y = 13.0993277, shape = 16, color = "#CF4647") + #SETTI I
annotate("point", x = 2.6858407, y = 12.9739898, shape = 16, color = "#CF4647") + #TOMBO
annotate("point", x = 2.9372924, y = 12.8960019, shape = 16, color = "#CF4647") + #WERE DJATAME PEU
annotate("text", x = 2.3, y = 12.851563, label = "Baba Dey (16/18, 88.9%)", size = 3) +
annotate("text", x = 3.31, y = 12.9819084, label = "Goberi Peulh (0/1, 0%)", size = 3) +
annotate("text", x = 2.8491551, y = 13.25, label = "Guillare Peulh\n(9/18, 50.0%)", size = 3) +
annotate("text", x = 2.8753615, y = 12.65, label = "Lissore\n(1/2, 50.0%)", size = 3) +
annotate("text", x = 2.9316658, y = 13.58, label = "Mounbeina Fandoga\n(14/16, 87.5%)", size = 3) +
annotate("text", x = 2.4, y = 13.0840501, label = "Poullo (10/14, 71.4%)", size = 3) +
annotate("text", x = 3.34, y = 13.0993277, label = "Setti I (3/10, 30.0%)", size = 3) +
annotate("text", x = 2.35, y = 12.9739898, label = "Tombo (0/3, 0%)", size = 3) +
annotate("text", x = 3.53, y = 12.8960019, label = "Were Djatame Peul (3/4, 75.0%)", size = 3) +
#annotate("point", x = 3.2081, y = 13.0505, size = 3, colour = "#CF4647", shape = 8) + #Dosso
#annotate("text", x = 3.4, y = 13.0505, label = "Dosso", size = 3) #Dosso
annotate("point", x = 2.1254, y = 13.5116, size = 3, colour = "#CF4647", shape = 8) + #Niamey
annotate("text", x = 2.1254, y = 13.38, label = "Niamey", size = 3) #Niamey
#PRINT.
png("niger_inset_map_update.jpg", width = 6, height = 6, units = "in", res = 300)
png
grid.newpage()
vp1 <- viewport(width = 1, height = 1, x = 0.5, y = 0.5)  #the larger map
vp2 <- viewport(width = 0.325, height = 0.325, x = 0.325, y = 0.81)  #the inset in upper right
print(nigerDossoInset, vp = vp1)
print(nigerCountryInset, vp = vp2)
dev.off()
nigerRegionsDF <- as.data.frame(nigerRegions)
nigerDossoCaption <- nigerDossoInset +
labs(caption = "BA: Baba Dey (14/18, 77.8%)\n GO: Goberi Peulh (0/1, 0%)\n Guillare Peulh (11/18, 61.1%)") +
geom_polygon(data = subset(nigerRegions, NAME_1 %in% c("Dosso")),
aes(group = group),
size = 1,
color = "white",
fill = "white",
x = 4,
y = 4)
nigerDossoCaption
#With grid.
png("niger_inset_map_caption.jpg", width = 6, height = 6, units = "in", res = 300)
png
grid.newpage()
vp1 <- viewport(width = 1, height = 1, x = 0.5, y = 0.5)  #the larger map
vp2 <- viewport(width = 0.35, height = 0.35, x = 0.33, y = 0.8)  #the inset in upper right
print(nigerDossoCaption, vp = vp1)
print(nigerCountryInset, vp = vp2)
dev.off()
#With cowplot.
#nigerInset <- ggdraw() +
#draw_plot(nigerDosso) +
#draw_plot(nigerRegions, x = 0.07, y = .7, width = .3, height = .3)
#ggsave(filename = "nigerInset.jpg",
#plot = plot.with.inset,
#width = 17,
#height = 12,
#units = "cm",
#dpi = 300)
#With egg.
#nigerInset <- nigerDosso +
#annotation_custom(ggplotGrob(nigerRegions),
#xmin = 5, xmax = 7,
#ymin = 30, ymax = 44)
#With USGS AddInsetMap function.
#AddInsetMap(nigerRegions, width = 2, main.label = list("Dosso"),
#sub.label = list("Map area"), loc = "topright")
niger <- map_data("worldHires", region = "Niger")
nigerMap <- ggplot() +
geom_polygon(data = niger,   # geom_polygon draw shape fill
aes(x= long,     # longitude
y= lat,      # latitude
group = group),
fill = "gray88") +
theme_few() +
coord_fixed(ratio = 1, xlim = NULL, ylim = NULL, expand = TRUE, clip = "on")
nigerMap
#spData dataframes.
#afcon
#worldbank_df
#FULL NAME LABELS
nigerDossoInset <- ggplot() +
geom_polygon(data = nigerRegions, #geom_polygon draw shape fill
aes(x= long, #longitude
y= lat, #latitude
group = group),
fill = "#E5DDCB",
colour = "#C1B398") +
theme_few() +
labs(title = "",
x = "\nLongitude",
y = "Latitude\n") +
coord_fixed(ratio = 1, xlim = NULL, ylim = NULL, expand = TRUE, clip = "on") +
coord_map(xlim = c(1.6, 4.66), ylim = c(11.6, 14.66)) +
annotate("point", x = 2.775743, y = 12.851563, shape = 16, color = "#CF4647") + #BABA DEY
annotate("point", x = 2.8755067, y = 12.9819084, shape = 16, color = "#CF4647") + #GOBERI PEULH
annotate("point", x = 2.8491551, y = 13.1197411, shape = 16, color = "#CF4647") + #GUILLARE PEULH
annotate("point", x = 2.8753615, y = 12.7657579, shape = 16, color = "#CF4647") + #LISSORE
annotate("point", x = 2.9316658, y = 13.4575975, shape = 16, color = "#CF4647") + #MOUNBEINA FANDOGA
annotate("point", x = 2.7768802, y = 13.0840501, shape = 16, color = "#CF4647") + #POULLO
annotate("point", x = 2.9772676, y = 13.0993277, shape = 16, color = "#CF4647") + #SETTI I
annotate("point", x = 2.6858407, y = 12.9739898, shape = 16, color = "#CF4647") + #TOMBO
annotate("point", x = 2.9372924, y = 12.8960019, shape = 16, color = "#CF4647") + #WERE DJATAME PEU
annotate("text", x = 2.3, y = 12.851563, label = "Baba Dey (16/18, 88.9%)", size = 3) +
annotate("text", x = 3.31, y = 12.9819084, label = "Goberi Peulh (0/1, 0%)", size = 3) +
annotate("text", x = 2.8491551, y = 13.25, label = "Guillare Peulh\n(9/18, 50.0%)", size = 3) +
annotate("text", x = 2.8753615, y = 12.65, label = "Lissore\n(1/2, 50.0%)", size = 3) +
annotate("text", x = 2.9316658, y = 13.58, label = "Mounbeina Fandoga\n(14/16, 87.5%)", size = 3) +
annotate("text", x = 2.4, y = 13.0840501, label = "Poullo (10/14, 71.4%)", size = 3) +
annotate("text", x = 3.34, y = 13.0993277, label = "Setti I (3/10, 30.0%)", size = 3) +
annotate("text", x = 2.35, y = 12.9739898, label = "Tombo (0/3, 0%)", size = 3) +
annotate("text", x = 3.53, y = 12.8960019, label = "Were Djatame Peul (3/4, 75.0%)", size = 3) +
#annotate("point", x = 3.2081, y = 13.0505, size = 3, colour = "#CF4647", shape = 8) + #Dosso
#annotate("text", x = 3.4, y = 13.0505, label = "Dosso", size = 3) #Dosso
annotate("point", x = 2.1254, y = 13.5116, size = 3, colour = "#CF4647", shape = 8) + #Niamey
annotate("text", x = 2.1254, y = 13.38, label = "Niamey", size = 3) #Niamey
#PRINT.
png("niger_inset_map_update.jpg", width = 6, height = 6, units = "in", res = 900)
png
grid.newpage()
vp1 <- viewport(width = 1, height = 1, x = 0.5, y = 0.5)  #the larger map
vp2 <- viewport(width = 0.325, height = 0.325, x = 0.325, y = 0.81)  #the inset in upper right
print(nigerDossoInset, vp = vp1)
print(nigerCountryInset, vp = vp2)
dev.off()
#FULL NAME LABELS
nigerDossoInset <- ggplot() +
geom_polygon(data = nigerRegions, #geom_polygon draw shape fill
aes(x= long, #longitude
y= lat, #latitude
group = group),
fill = "#E5DDCB",
colour = "#C1B398") +
theme_few() +
labs(title = "",
x = "\nLongitude",
y = "Latitude\n") +
coord_fixed(ratio = 1, xlim = NULL, ylim = NULL, expand = TRUE, clip = "on") +
coord_map(xlim = c(1.6, 4.66), ylim = c(11.6, 14.66)) +
annotate("point", x = 2.775743, y = 12.851563, shape = 16, color = "#CF4647") + #BABA DEY
annotate("point", x = 2.8755067, y = 12.9819084, shape = 16, color = "#CF4647") + #GOBERI PEULH
annotate("point", x = 2.8491551, y = 13.1197411, shape = 16, color = "#CF4647") + #GUILLARE PEULH
annotate("point", x = 2.8753615, y = 12.7657579, shape = 16, color = "#CF4647") + #LISSORE
annotate("point", x = 2.9316658, y = 13.4575975, shape = 16, color = "#CF4647") + #MOUNBEINA FANDOGA
annotate("point", x = 2.7768802, y = 13.0840501, shape = 16, color = "#CF4647") + #POULLO
annotate("point", x = 2.9772676, y = 13.0993277, shape = 16, color = "#CF4647") + #SETTI I
annotate("point", x = 2.6858407, y = 12.9739898, shape = 16, color = "#CF4647") + #TOMBO
annotate("point", x = 2.9372924, y = 12.8960019, shape = 16, color = "#CF4647") + #WERE DJATAME PEU
annotate("text", x = 2.3, y = 12.851563, label = "Baba Dey (16/18, 88.9%)", size = 3) +
annotate("text", x = 3.31, y = 12.9819084, label = "Goberi Peulh (0/1, 0%)", size = 3) +
annotate("text", x = 2.8491551, y = 13.25, label = "Guillare Peulh\n(9/18, 50.0%)", size = 3) +
annotate("text", x = 2.8753615, y = 12.65, label = "Lissore\n(1/2, 50.0%)", size = 3) +
annotate("text", x = 2.9316658, y = 13.58, label = "Mounbeina Fandoga\n(14/16, 87.5%)", size = 3) +
annotate("text", x = 2.4, y = 13.0840501, label = "Poullo (10/14, 71.4%)", size = 3) +
annotate("text", x = 3.34, y = 13.0993277, label = "Setti I (3/10, 30.0%)", size = 3) +
annotate("text", x = 2.35, y = 12.9739898, label = "Tombo (0/3, 0%)", size = 3) +
annotate("text", x = 3.53, y = 12.8960019, label = "Were Djatame Peul (3/4, 75.0%)", size = 3) +
#annotate("point", x = 3.2081, y = 13.0505, size = 3, colour = "#CF4647", shape = 8) + #Dosso
#annotate("text", x = 3.4, y = 13.0505, label = "Dosso", size = 3) #Dosso
annotate("point", x = 2.1254, y = 13.5116, size = 3, colour = "#CF4647", shape = 8) + #Niamey
annotate("text", x = 2.1254, y = 13.38, label = "Niamey", size = 3) #Niamey
#PRINT.
png("niger_inset_map_update_small.jpg", width = 6, height = 6, units = "in", res = 200)
png
grid.newpage()
vp1 <- viewport(width = 1, height = 1, x = 0.5, y = 0.5)  #the larger map
vp2 <- viewport(width = 0.325, height = 0.325, x = 0.325, y = 0.81)  #the inset in upper right
print(nigerDossoInset, vp = vp1)
print(nigerCountryInset, vp = vp2)
dev.off()
#Install packages
#install.packages("xtable", repos="http://cran.us.r-project.org")
#install.packages("scales", repos="http://cran.us.r-project.org")
#install.packages("bazar", repos="http://cran.us.r-project.org")
#install.packages("gmodels", repos="http://cran.us.r-project.org")
#install.packages("stargazer", repos="http://cran.us.r-project.org")
#install.packages("cowplot", repos="http://cran.us.r-project.org")
#Load packages
library(tidyverse)
library(lubridate)
library(epiR)
library(xtable)
library(scales)
library(bazar) #sumNA function
library(gmodels)
library(stargazer)
library(cowplot)
library(ggthemes)
#Color palette
library(RColorBrewer)
#display.brewer.pal(9, name="BrBG")
BrBG6 <- c("#8C510A" ,"#BF812D", "#DFC27D", "#80CDC1", "#35978F", "#01665E")
BrBG5 <- c("#8C510A" ,"#BF812D", "#DFC27D", "#35978F", "#01665E")
BrBG4_brown <- c("#f6e8c3", "#dfc27d", "#bf812d", "#8c510a")
BrBG4_turq <- c("#c7eae5", "#80cdc1", "#35978f", "#01665e")
BrBG4_turq_dark <- c("#80cdc1", "#35978f", "#01665e", "#003c30")
BrBG2 <- c("#003c30", "#35978f")
#Working directorories (set one to comment depending on who is working on the file)
#Kristen:
setwd("~/Dropbox/_Papers/Rectal swab STH/Analysis/")
#Install packages
#install.packages("xtable", repos="http://cran.us.r-project.org")
#install.packages("scales", repos="http://cran.us.r-project.org")
#install.packages("bazar", repos="http://cran.us.r-project.org")
#install.packages("gmodels", repos="http://cran.us.r-project.org")
#install.packages("stargazer", repos="http://cran.us.r-project.org")
#install.packages("cowplot", repos="http://cran.us.r-project.org")
#Load packages
library(tidyverse)
library(lubridate)
library(epiR)
library(xtable)
library(scales)
library(bazar) #sumNA function
library(gmodels)
library(stargazer)
library(cowplot)
library(ggthemes)
#Color palette
library(RColorBrewer)
#display.brewer.pal(9, name="BrBG")
BrBG6 <- c("#8C510A" ,"#BF812D", "#DFC27D", "#80CDC1", "#35978F", "#01665E")
BrBG5 <- c("#8C510A" ,"#BF812D", "#DFC27D", "#35978F", "#01665E")
BrBG4_brown <- c("#f6e8c3", "#dfc27d", "#bf812d", "#8c510a")
BrBG4_turq <- c("#c7eae5", "#80cdc1", "#35978f", "#01665e")
BrBG4_turq_dark <- c("#80cdc1", "#35978f", "#01665e", "#003c30")
BrBG2 <- c("#003c30", "#35978f")
#Working directorories (set one to comment depending on who is working on the file)
#Kristen:
#setwd("~/Dropbox/_Papers/Rectal swab STH/Analysis/")
#Jacqueline
setwd("/Users/razel/Dropbox/Rectal swab STH/Analysis/")
#long data
dL <- read.csv("~/Dropbox/_Papers/Rectal swab STH/Analysis/DataPrep/GiardiaDataMergedLong_03.20.20.csv")
#Install packages
#install.packages("xtable", repos="http://cran.us.r-project.org")
#install.packages("scales", repos="http://cran.us.r-project.org")
#install.packages("bazar", repos="http://cran.us.r-project.org")
#install.packages("gmodels", repos="http://cran.us.r-project.org")
#install.packages("stargazer", repos="http://cran.us.r-project.org")
#install.packages("cowplot", repos="http://cran.us.r-project.org")
#Load packages
library(tidyverse)
library(lubridate)
library(epiR)
library(xtable)
library(scales)
library(bazar) #sumNA function
library(gmodels)
library(stargazer)
library(cowplot)
library(ggthemes)
#Color palette
library(RColorBrewer)
#display.brewer.pal(9, name="BrBG")
BrBG6 <- c("#8C510A" ,"#BF812D", "#DFC27D", "#80CDC1", "#35978F", "#01665E")
BrBG5 <- c("#8C510A" ,"#BF812D", "#DFC27D", "#35978F", "#01665E")
BrBG4_brown <- c("#f6e8c3", "#dfc27d", "#bf812d", "#8c510a")
BrBG4_turq <- c("#c7eae5", "#80cdc1", "#35978f", "#01665e")
BrBG4_turq_dark <- c("#80cdc1", "#35978f", "#01665e", "#003c30")
BrBG2 <- c("#003c30", "#35978f")
#Working directorories (set one to comment depending on who is working on the file)
#Kristen:
#setwd("~/Dropbox/_Papers/Rectal swab STH/Analysis/")
#Jacqueline
setwd("/Users/razel/Dropbox/Rectal swab STH/Analysis/")
#long data
#dL <- read.csv("~/Dropbox/_Papers/Rectal swab #STH/Analysis/DataPrep/GiardiaDataMergedLong_03.20.20.csv")
dL <- read.csv("DataPrep/GiardiaDataMergedLong_03.20.20.csv")
#d <- read.csv("~/Dropbox/_Papers/Rectal swab #STH/Analysis/DataPrep/GiardiaDataMergedWide_03.20.20.csv")
d <- read.csv("DataPrep/GiardiaDataMergedWide_03.20.20.csv")
#Remove data points with low IAC values
# d <- d %>%
#   filter(stool1_ID != 491170 & stool1_ID != 460864)
#Reliability Stool vs. stool
############################
#Step 1: create a confusion matrix
tab1 <- xtabs(~stool2_pos + stool1_pos, data=d)
tab1
#Step 2: reverse column order
tab1 <- tab1[ 2:1, 2:1]
#Step 3: use the epi test command to calculate sensitivity and specificity
epi.kappa(tab1)
#Reliability Swab vs. swab
############################
#Step 1: create a confusion matrix
tab2 <- xtabs(~rectal2_pos + rectal1_pos, data=d)
tab2
#Step 2: reverse column order
tab2 <- tab2[ 2:1, 2:1]
#Step 3: use the epi test command to calculate sensitivity and specificity
epi.kappa(tab2)
#all positives
tab3 <- xtabs(~eitherRectalPos + eitherStoolPos, data=d)
tab3 <- tab3[ 2:1, 2:1]
tab3
epi.kappa(tab3)
#################################
# (+/-) Agreement tables
#################################
#ALL SWABS VS ALL STOOL
AgreementTab  <- addmargins(table(d$eitherRectalPos, d$eitherStoolPos, dnn=c("Rectal Swab","Bulk Stool Sample")))
colnames(AgreementTab) <- c( "Stool --", "Stool +", "Total")
rownames(AgreementTab) <- c( "Swab --", "Swab +", "Total")
AgreementTab
print(xtable(AgreementTab), include.rownames=TRUE, booktabs = TRUE)
#In stargazer
agree <- as.data.frame(xtable(AgreementTab))
stargazer(agree, type = "latex", summary = FALSE, rownames = TRUE, title = "PCR detection agreement by specimen type")
#In xtable
agree <- as.data.frame(xtable(AgreementTab))
print(xtable(agree, caption = "PCR detection agreement by specimen type"), caption.placement = getOption("xtable.caption.placement",
"top"))
#STOOL REPLICATE 1 VS STOOL REPLICATE 2
AgreementStool  <- addmargins(table(d$stool1_pos, d$stool2_pos, dnn=c("Bulk Stool Sample 1","Bulk Stool Sample 2")))
colnames(AgreementStool) <- c( "Stool 1  --", "Stool 1 +", "Total")
rownames(AgreementStool) <- c( "Stool 2  --", "Stool 2 +", "Total")
AgreementStool
print(xtable(AgreementStool), include.rownames=TRUE, booktabs = TRUE)
AgreementStool <- as.data.frame(xtable(AgreementStool))
stargazer(AgreementStool, type = "latex", summary = FALSE, rownames = TRUE, title = "PCR detection agreement by bulk stool replicate group", notes = "κ = 0.91 (95% CI 0.63–1.00)")
#SWAB REPLICATE 1 VS SWAB REPLICATE 2
AgreementSwab  <- addmargins(table(d$rectal1_pos, d$rectal2_pos, dnn=c("Rectal swab 1","Rectal swab 2")))
colnames(AgreementSwab) <- c( "Swab 1  --", "Swab 1 +", "Total")
rownames(AgreementSwab) <- c( "Swab 2  --", "Swab 2 +", "Total")
print(xtable(AgreementSwab), include.rownames=TRUE, booktabs = TRUE)
AgreementSwab <- as.data.frame(xtable(AgreementSwab))
stargazer(AgreementSwab, type = "latex", summary = FALSE, rownames = TRUE, title = "PCR detection agreement by rectal swab replicate group", notes = "κ = 0.79 (95% CI 0.51–1.00)")
######################################
#Calculate sensitivity and specificity
######################################
#Step 1: create a cross tabulation (also called a confusion matrix)
swabTabAll <- xtabs(~eitherRectalPos + truePos, data=d)
swabTab1 <- xtabs(~rectal1_pos + truePos, data=d)
swabTab2 <- xtabs(~rectal2_pos + truePos, data=d)
stoolTabAll <- xtabs(~eitherStoolPos + truePos, data=d)
stoolTab1 <- xtabs(~stool1_pos + truePos, data=d)
stoolTab2 <- xtabs(~stool2_pos + truePos, data=d)
#Step 2: reverse column order
swabTabAll <- swabTabAll[2:1, 2:1]
swabTabAll
swabTab1 <- swabTab1[2:1, 2:1]
swabTab1
swabTab2 <- swabTab2[2:1, 2:1]
swabTab2
stoolTabAll <- stoolTabAll[2:1, 2:1]
stoolTabAll
stoolTab1 <- stoolTab1[2:1, 2:1]
stoolTab1
stoolTab2 <- stoolTab2[2:1, 2:1]
stoolTab2
#Step 3: use the epi test command to calculate swab sensitivity and specificity WITH NA's REPLACED WITH 0's
epi.tests(swabTabAll)
#sensitivity with all swab positives vs truePos = 68%
#specificity with all swab positives vs truePos = 100%
epi.tests(swabTab1)
#sensitivity with swab 1 positives vs truePos = 63%
#specificity with swab 1 positives vs truePos = 100%
epi.tests(swabTab2)
#sensitivity with swab 2 positives vs truePos = 69%
#specificity with swab 2 positives vs truePos = 100%
epi.tests(stoolTabAll)
#sensitivity with all stool positives vs truePos = 96%
#specificity with all stool positives vs truePos = 100%
epi.tests(stoolTab1)
#sensitivity with stool 1 positives vs truePos = 95%
#specificity with stool 1 positives vs truePos = 100%
epi.tests(stoolTab2)
#sensitivity with stool 2 positives vs truePos = 94%
#specificity with stool 2 positives vs truePos = 100%
#restrict to swabs with visable stool
####################################
table(d$visiblestoolonswab1)
#only 16 swabs with visable stool in rep 1 and 18 in rep 2
tabVisible <- xtabs(~rectal1_pos + truePos, data=subset(d, visible.stool=="Yes"))
#Install packages
#install.packages("xtable", repos="http://cran.us.r-project.org")
#install.packages("scales", repos="http://cran.us.r-project.org")
#install.packages("bazar", repos="http://cran.us.r-project.org")
#install.packages("gmodels", repos="http://cran.us.r-project.org")
#install.packages("stargazer", repos="http://cran.us.r-project.org")
#install.packages("cowplot", repos="http://cran.us.r-project.org")
#Load packages
library(tidyverse)
library(lubridate)
library(epiR)
library(xtable)
library(scales)
library(bazar) #sumNA function
library(gmodels)
library(stargazer)
library(cowplot)
library(ggthemes)
#Color palette
library(RColorBrewer)
#display.brewer.pal(9, name="BrBG")
BrBG6 <- c("#8C510A" ,"#BF812D", "#DFC27D", "#80CDC1", "#35978F", "#01665E")
BrBG5 <- c("#8C510A" ,"#BF812D", "#DFC27D", "#35978F", "#01665E")
BrBG4_brown <- c("#f6e8c3", "#dfc27d", "#bf812d", "#8c510a")
BrBG4_turq <- c("#c7eae5", "#80cdc1", "#35978f", "#01665e")
BrBG4_turq_dark <- c("#80cdc1", "#35978f", "#01665e", "#003c30")
BrBG2 <- c("#003c30", "#35978f")
#Working directorories (set one to comment depending on who is working on the file)
#Kristen:
#setwd("~/Dropbox/_Papers/Rectal swab STH/Analysis/")
#Jacqueline
setwd("/Users/razel/Dropbox/Rectal swab STH/Analysis/")
#long data
#dL <- read.csv("~/Dropbox/_Papers/Rectal swab #STH/Analysis/DataPrep/GiardiaDataMergedLong_03.20.20.csv")
dL <- read.csv("DataPrep/GiardiaDataMergedLong_03.20.20.csv")
#d <- read.csv("~/Dropbox/_Papers/Rectal swab #STH/Analysis/DataPrep/GiardiaDataMergedWide_03.20.20.csv")
d <- read.csv("DataPrep/GiardiaDataMergedWide_03.20.20.csv")
#Remove data points with low IAC values
d <- d %>%
filter(stool1_ID != 491170 & stool1_ID != 460864)
#Reliability Stool vs. stool
############################
#Step 1: create a confusion matrix
tab1 <- xtabs(~stool2_pos + stool1_pos, data=d)
tab1
#Step 2: reverse column order
tab1 <- tab1[ 2:1, 2:1]
#Step 3: use the epi test command to calculate sensitivity and specificity
epi.kappa(tab1)
#Reliability Swab vs. swab
############################
#Step 1: create a confusion matrix
tab2 <- xtabs(~rectal2_pos + rectal1_pos, data=d)
tab2
#Step 2: reverse column order
tab2 <- tab2[ 2:1, 2:1]
#Step 3: use the epi test command to calculate sensitivity and specificity
epi.kappa(tab2)
#all positives
tab3 <- xtabs(~eitherRectalPos + eitherStoolPos, data=d)
tab3 <- tab3[ 2:1, 2:1]
tab3
epi.kappa(tab3)
#################################
# (+/-) Agreement tables
#################################
#ALL SWABS VS ALL STOOL
AgreementTab  <- addmargins(table(d$eitherRectalPos, d$eitherStoolPos, dnn=c("Rectal Swab","Bulk Stool Sample")))
colnames(AgreementTab) <- c( "Stool --", "Stool +", "Total")
rownames(AgreementTab) <- c( "Swab --", "Swab +", "Total")
AgreementTab
print(xtable(AgreementTab), include.rownames=TRUE, booktabs = TRUE)
#In stargazer
agree <- as.data.frame(xtable(AgreementTab))
stargazer(agree, type = "latex", summary = FALSE, rownames = TRUE, title = "PCR detection agreement by specimen type")
#In xtable
agree <- as.data.frame(xtable(AgreementTab))
print(xtable(agree, caption = "PCR detection agreement by specimen type"), caption.placement = getOption("xtable.caption.placement",
"top"))
#STOOL REPLICATE 1 VS STOOL REPLICATE 2
AgreementStool  <- addmargins(table(d$stool1_pos, d$stool2_pos, dnn=c("Bulk Stool Sample 1","Bulk Stool Sample 2")))
colnames(AgreementStool) <- c( "Stool 1  --", "Stool 1 +", "Total")
rownames(AgreementStool) <- c( "Stool 2  --", "Stool 2 +", "Total")
AgreementStool
print(xtable(AgreementStool), include.rownames=TRUE, booktabs = TRUE)
AgreementStool <- as.data.frame(xtable(AgreementStool))
stargazer(AgreementStool, type = "latex", summary = FALSE, rownames = TRUE, title = "PCR detection agreement by bulk stool replicate group", notes = "κ = 0.91 (95% CI 0.63–1.00)")
#SWAB REPLICATE 1 VS SWAB REPLICATE 2
AgreementSwab  <- addmargins(table(d$rectal1_pos, d$rectal2_pos, dnn=c("Rectal swab 1","Rectal swab 2")))
colnames(AgreementSwab) <- c( "Swab 1  --", "Swab 1 +", "Total")
rownames(AgreementSwab) <- c( "Swab 2  --", "Swab 2 +", "Total")
print(xtable(AgreementSwab), include.rownames=TRUE, booktabs = TRUE)
AgreementSwab <- as.data.frame(xtable(AgreementSwab))
stargazer(AgreementSwab, type = "latex", summary = FALSE, rownames = TRUE, title = "PCR detection agreement by rectal swab replicate group", notes = "κ = 0.79 (95% CI 0.51–1.00)")
######################################
#Calculate sensitivity and specificity
######################################
#Step 1: create a cross tabulation (also called a confusion matrix)
swabTabAll <- xtabs(~eitherRectalPos + truePos, data=d)
swabTab1 <- xtabs(~rectal1_pos + truePos, data=d)
swabTab2 <- xtabs(~rectal2_pos + truePos, data=d)
stoolTabAll <- xtabs(~eitherStoolPos + truePos, data=d)
stoolTab1 <- xtabs(~stool1_pos + truePos, data=d)
stoolTab2 <- xtabs(~stool2_pos + truePos, data=d)
#Step 2: reverse column order
swabTabAll <- swabTabAll[2:1, 2:1]
swabTabAll
swabTab1 <- swabTab1[2:1, 2:1]
swabTab1
swabTab2 <- swabTab2[2:1, 2:1]
swabTab2
stoolTabAll <- stoolTabAll[2:1, 2:1]
stoolTabAll
stoolTab1 <- stoolTab1[2:1, 2:1]
stoolTab1
stoolTab2 <- stoolTab2[2:1, 2:1]
stoolTab2
#Step 3: use the epi test command to calculate swab sensitivity and specificity WITH NA's REPLACED WITH 0's
epi.tests(swabTabAll)
#sensitivity with all swab positives vs truePos = 68%
#specificity with all swab positives vs truePos = 100%
epi.tests(swabTab1)
#sensitivity with swab 1 positives vs truePos = 63%
#specificity with swab 1 positives vs truePos = 100%
epi.tests(swabTab2)
#sensitivity with swab 2 positives vs truePos = 69%
#specificity with swab 2 positives vs truePos = 100%
epi.tests(stoolTabAll)
#sensitivity with all stool positives vs truePos = 96%
#specificity with all stool positives vs truePos = 100%
epi.tests(stoolTab1)
#sensitivity with stool 1 positives vs truePos = 95%
#specificity with stool 1 positives vs truePos = 100%
epi.tests(stoolTab2)
#sensitivity with stool 2 positives vs truePos = 94%
#specificity with stool 2 positives vs truePos = 100%
#restrict to swabs with visable stool
####################################
table(d$visiblestoolonswab1)
#only 16 swabs with visable stool in rep 1 and 18 in rep 2
tabVisible <- xtabs(~rectal1_pos + truePos, data=subset(d, visible.stool=="Yes"))
